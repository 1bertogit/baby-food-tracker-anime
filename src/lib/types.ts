export interface FoodItem {
  id: string;
  name: string;
  category: 'fruta' | 'carboidrato' | 'proteina' | 'legume' | 'verdura' | 'leguminosa';
  tested: boolean;
  accepted?: 'sim' | 'nao' | 'parcial';
  acceptanceNotes?: string;
  testDate?: string;
  notes?: string;
}

export interface AllergyTest {
  id: string;
  food: string;
  day: number;
  tested: boolean;
  testDate?: string;
  result?: 'ok' | 'alergia' | 'pendente';
  icon: string;
  instructions?: string;
}

export interface Supplement {
  name: string;
  dose: string;
  time: string;
  taken: boolean;
}

export interface WeeklySchedule {
  phase: string;
  meals: string[];
  focus: string;
  periodo: string;
  testes: string[];
}

export interface DailyMeal {
  type: 'acordar' | 'fruta_manha' | 'almoco' | 'fruta_tarde' | 'jantar' | 'dormir';
  time: string;
  foods: string[];
  isTestDay?: boolean;
  testType?: 'gluten' | 'peixe' | 'ovo';
  milkAmount?: string; // Quantidade de leite (ex: "120ml", "90ml")
  milkType?: 'formula' | 'materno';
  supplements?: string[]; // Suplementos neste hor√°rio
}

export interface DailySchedule {
  day: number;
  meals: DailyMeal[];
}

export interface TutorialStep {
  target: string;
  title: string;
  content: string;
  position: 'top' | 'bottom' | 'left' | 'right';
  action?: string;
}

export type FoodCategory = 'fruta' | 'carboidrato' | 'proteina' | 'legume' | 'verdura' | 'leguminosa';
export type AcceptanceLevel = 'sim' | 'nao' | 'parcial';
export type TestResult = 'ok' | 'alergia' | 'pendente';

export type FoodGroup = 'carboidrato' | 'proteina' | 'leguminosa' | 'legume' | 'verdura';

export interface FoodGroupInfo {
  name: string;
  color: string;
  icon: string;
  description: string;
  examples: string[];
}

export interface NutritionalFood {
  name: string;
  group: FoodGroup;
  preparation?: string;
  benefits?: string;
  warnings?: string;
}

export interface NutritionalGuideline {
  id: string;
  category: 'intestinal' | 'preparation' | 'prohibited' | 'hygiene';
  title: string;
  description: string;
  tips: string[];
  importance: 'high' | 'medium' | 'low';
}

export interface Todo {
  id: string;
  title: string;
  description?: string;
  completed: boolean;
  priority: 'high' | 'medium' | 'low';
  category: 'feeding' | 'health' | 'shopping' | 'preparation' | 'observation' | 'custom';
  dueTime?: string;
  isAutoGenerated: boolean;
  relatedDay?: number;
  createdAt: string;
}

export type TodoPriority = 'high' | 'medium' | 'low';
export type TodoCategory = 'feeding' | 'health' | 'shopping' | 'preparation' | 'observation' | 'custom'; 